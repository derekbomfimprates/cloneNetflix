[{"/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/index.js":"1","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/App.js":"2","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/reportWebVitals.js":"3","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/Tmdb.js":"4","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/FeaturedMovie/index.js":"5","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/Header/index.js":"6","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/MovieRow/index.js":"7","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/Footer/index.js":"8"},{"size":200,"mtime":1634225133889,"results":"9","hashOfConfig":"10"},{"size":2178,"mtime":1634633227486,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1634224861309,"results":"12","hashOfConfig":"10"},{"size":2569,"mtime":1634495758088,"results":"13","hashOfConfig":"10"},{"size":1795,"mtime":1634634178160,"results":"14","hashOfConfig":"10"},{"size":512,"mtime":1634544033804,"results":"15","hashOfConfig":"10"},{"size":1588,"mtime":1634633227486,"results":"16","hashOfConfig":"10"},{"size":245,"mtime":1634545056579,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1shmckk",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/index.js",[],["38","39"],"/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/App.js",["40"],"/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/reportWebVitals.js",[],"/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/Tmdb.js",["41"],"const API_KEY='6ff565c8fad9afdeac71677220eae7af';\nconst API_BASE= 'https://api.themoviedb.org/3';\n\n\n/*\n-Movies Original\n-trending\n-top rated\n-action\n-horroble\n-comedy\n-documentary\n*/\n// fuction send endpoint and return json \nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`); // request\n    const json  = await req.json(); // get the json\n    return json;//return \n\n}\nexport default{\ngetHomeList: async()=>{\n    return[\n        {\n            slug: 'originals',\n            title: 'Originals from Netflix',\n            items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`) // 213 just get netflix movies (originals)\n        },\n        {\n            slug: 'trending',\n            title: 'Recommended for you',\n            items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`) \n        },\n        {\n            slug: 'toprated',\n            title: 'Top Rated',\n            items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`) \n        },\n        {\n            slug: 'action',\n            title: 'Action',\n            items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`) // 28 for action\n        },\n        {\n            slug: 'comedy',\n            title: 'Comedy',\n            items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`) // 35 for comedy\n        },\n        {\n            slug: 'horror',\n            title: 'Horror',\n            items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`) // 27 for horror\n        },\n        {\n            slug: 'romance',\n            title: 'Romance',\n            items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`) // 10749 for romance\n        },\n        {\n            slug: 'documentary',\n            title: 'Documentary',\n            items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`) // 99 for doc\n        },\n\n\n    ];\n},\ngetMovieInfo: async (movieId, type) =>{\n    let info = {};\n\n    if(movieId){\n        switch(type){\n            case 'movie':\n                info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n\n            break;\n            case 'tv':\n                info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n\n            break;\n            default:\n                info=null;\n            break;\n        }\n    }\n return info;\n}\n}\n","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/FeaturedMovie/index.js",["42","43"],"/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/Header/index.js",["44","45"],"import react from \"react\";\nimport \"./Header.css\";\n\nexport default ({color}) =>{\n    return( \n<header className={color ? 'color' : ''}>\n    <div className=\"header--logo\">\n        <a href=\"/\">\n        <img src=\"https://1000logos.net/wp-content/uploads/2017/05/Netflix-Logo.png\" alt=\"Netflix\" />\n   </a> \n   </div>\n   <div className=\"header--user\">\n   <a href=\"/\">\n        <img src=\"https://i.pinimg.com/originals/2b/90/0d/2b900d5612554cd0b5edf7d8e848c3ea.png\" alt=\"Netflix\" />\n   </a> \n   </div>\n</header>\n    );\n}","/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/MovieRow/index.js",["46"],"/Users/derekbomfimprates/cloneNetflix/clonenetflix/src/components/Footer/index.js",["47","48"],"import react from \"react\";\nimport \"./Footer.css\";\n\nexport default () =>{\n    return( \n<footer>\n    Created by Derek Prates. <br />\n    All rights reserved Netiflix. <br />\n    Data get from Themoviedb.org and Bonieky Lacerda.\n\n</footer>\n    );\n}",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":1,"nodeType":"55","endLine":80,"endColumn":2},{"ruleId":"53","severity":1,"message":"56","line":21,"column":1,"nodeType":"55","endLine":88,"endColumn":2},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":4,"column":1,"nodeType":"55","endLine":54,"endColumn":3},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":4,"column":1,"nodeType":"55","endLine":19,"endColumn":2},{"ruleId":"53","severity":1,"message":"54","line":8,"column":1,"nodeType":"55","endLine":58,"endColumn":3},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":4,"column":1,"nodeType":"55","endLine":13,"endColumn":2},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]